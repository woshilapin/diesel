initSidebarItems({"mod":[["data_types","Data structures for PG types which have no corresponding Rust type"],["expression","PostgreSQL related query builder extensions"],["sql_types","PostgreSQL specific SQL types"]],"struct":[["DistinctOnClause","Represents `DISTINCT ON (...)`"],["FailedToLookupTypeError","This error indicates that a type lookup for a custom postgres type failed"],["Pg","The PostgreSQL backend"],["PgConnection","The connection string expected by `PgConnection::establish` should be a PostgreSQL connection string, as documented at https://www.postgresql.org/docs/9.4/static/libpq-connect.html#LIBPQ-CONNSTRING"],["PgMetadataCache","Cache for the OIDs of custom Postgres types"],["PgMetadataCacheKey","The key used to lookup cached type oidâ€™s inside of a [PgMetadataCache]."],["PgQueryBuilder","The PostgreSQL query builder"],["PgTypeMetadata","The OIDs for a SQL type"],["PgValue","Raw postgres value as received from the database"],["TransactionBuilder","Used to build a transaction, specifying additional details."]],"trait":[["GetPgMetadataCache","Gets the `PgMetadataCache` for a `Connection<Backend=Pg>` so that the lookup of user defined types, or types which come from an extension can be cached."],["PgMetadataLookup","Determines the OID of types at runtime"],["TypeOidLookup","This is a helper trait to defer a type oid lookup to a later point in time"]]});