initSidebarItems({"mod":[["sql_dialect","This module contains all options provided by diesel to configure the [`SqlDialect`] trait."]],"trait":[["Backend","A database backend"],["DieselReserveSpecialization","This is a marker trait which indicates that diesel may specialize a certain `QueryFragment` impl in a later version. If you as a user encounter, where rustc suggests adding this a bound to a type implementing `Backend` consider adding the following bound instead `YourQueryType: QueryFragment<DB>` (the concrete bound is likely mentioned by rustc as part of a `note: â€¦`"],["HasBindCollector","The bind collector type used to collect query binds for this backend"],["HasRawValue","The raw representation of a database value given to `FromSql`."],["SqlDialect","This trait provides various options to configure the generated SQL for a specific backend."],["TrustedBackend","This trait just indicates that noone implements `SqlDialect` without enabling the `i-implement-a-third-party-backend-and-opt-into-breaking-changes` feature flag."]],"type":[["BindCollector","A helper type to get the bind collector for a database backend. Equivalent to `<DB as HasBindCollector<'a>>::BindCollector<'a>`j"],["RawValue","A helper type to get the raw representation of a database type given to `FromSql`. Equivalent to `<DB as Backend>::RawValue<'a>`."]]});